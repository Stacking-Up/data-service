openapi: 3.0.0
info:
  version: 0.1.0
  title: Data Service
  description: Service to expose StackingUp DataDB.
  contact:
    name: StackingUp
    email: stackingup13@gmail.com
    url: 'https://stacking-up.github.io'
  license:
    name: MIT
    url: 'http://opensource.org/licenses/MIT'
paths:
  /api/v1/users:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns all users
      operationId: getUsers
      parameters:
        - name: offset
          in: query
          description: 'Offset for pagination'
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: 'Limit for pagination'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns user by id
      operationId: getUser
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}/items:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns the items some user wants to store
      operationId: getUserItems
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}/items/{itemId}:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns an item some user wants to store
      operationId: getUserItem
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
        - name: itemId
          in: path
          description: Item's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}/ratings:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns some user's ratings
      operationId: getUserRatings
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
        - name: filter
          in: query
          description: 'Filter for given, received or both'
          required: false
          schema:
            type: string
            enum:
              - given
              - received
              - all
        - name: offset
          in: query
          description: 'Offset for pagination'
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: 'Limit for pagination'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rating'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}/ratings/{ratingId}:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns a rating some user has given or received
      operationId: getUserRating
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
        - name: ratingId
          in: path
          description: Rating's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rating'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}/spaces:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns spaces some user has published
      operationId: getUserSpaces
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Offset for pagination'
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: 'Limit for pagination'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/space'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}/spaces/{spaceId}:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns a space some user has published
      operationId: getUserSpace
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
        - name: spaceId
          in: path
          description: Space's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}/rentals:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns some user rentals
      operationId: getUserRentals
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Offset for pagination'
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: 'Limit for pagination'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rental'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/users/{userId}/rentals/{rentalId}:
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns some user rental
      operationId: getUserRental
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
        - name: rentalId
          in: path
          description: Rental's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rental'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  '/api/v1/users/{userId}/avatar':
    get:
      tags:
        - Users
      x-swagger-router-controller: UserController
      description: Returns the avatar of an user
      operationId: getUserAvatar
      parameters:
        - name: userId
          in: path
          description: User's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/spaces:
    get:
      tags:
        - Spaces
      x-swagger-router-controller: SpaceController
      description: Returns all spaces
      operationId: getSpaces
      parameters: 
        - name: offset
          in: query
          description: 'Number of elements to skip for pagination'
          required: false
          schema:
            type: integer
            format: int32

        - name: limit
          in: query
          description: 'Number of elements for pagination'
          required: false
          schema:
            type: integer
            format: int32

        - name: tag
          in: query
          description: 'Filter for given tags'
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: 
                - FLOOR_1
                - FLOOR_2
                - FLOOR_3UP
                - HOUSE_ROOM
                - FLAT_ROOM
                - BASEMENT
                - GARAGE
                - STORAGE_ROOM
                - INDUSTRIAL_WAREHOUSE
                - OFFICE_ROOM
                - PENTHOUSE
                - ELEVATOR
                - WET
                - DRY
                - COLD
                - WARM
                - HOT
                - SECURITY_ALARM
                - VIDEO_MONITORING
                - FIRE_ALARM
                - GROUND_FLOOR
                - SOCKET
                - INDOOR
                - OUTDOOR
                - NARROW_ACCESS
                - MEDIUM_WIDTH_ACCESS
                - WIDE_ACCESS
                
        - name: shared
          in: query
          description: 'Filter for shared category'
          required: false
          schema:
            type: boolean

        - name: minDim
          in: query
          description: 'Min value included for dimension filtering (Optional)'
          required: false
          schema:
            type: string

        - name: maxDim
          in: query
          description: 'Max value included for dimension filtering (Optional)'
          required: false
          schema:
            type: string

        - name: minPriceHour
          in: query
          description: 'Min value included for price/hour filtering (Optional)'
          required: false
          schema:
            type: string

        - name: maxPriceHour
          in: query
          description: 'Max value included for price/hour filtering (Optional)'
          required: false
          schema:
            type: string

        - name: minPriceDay
          in: query
          description: 'Min value included for price/day filtering (Optional)'
          required: false
          schema:
            type: string

        - name: maxPriceDay
          in: query
          description: 'Max value included for price/day filtering (Optional)'
          required: false
          schema:
            type: string

        - name: minPriceMonth
          in: query
          description: 'Min value included for price/month filtering (Optional)'
          required: false
          schema:
            type: string

        - name: maxPriceMonth
          in: query
          description: 'Max value included for price/month filtering (Optional)'
          required: false
          schema:
            type: string
        
        - name: isRentPerHour
          in: query
          description: 'Check if a space can be rented per hours'
          required: false
          schema:
            type: boolean

        - name: isRentPerDay
          in: query
          description: 'Check if a space can be rented per days'
          required: false
          schema:
            type: boolean
        
        - name: isRentPerMonth
          in: query
          description: 'Check if a space can be rented per months'
          required: false
          schema:
            type: boolean

        - name: orderBy
          in: query
          description: 'Order by price or initial date'
          required: false
          schema:
            type: string

        - name: search
          in: query
          description: 'Search the given text in title, description and location'
          required: false
          schema:
            type: string

        
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/space'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    post:
      security:
        - cookieAuth: []
      tags:
        - Spaces
      x-swagger-router-controller: SpaceController
      description: Checks the validity of a logged-in user's token and publishes the space
      operationId: postSpace      
      requestBody:
        x-name: body
        description: Space object to be published
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/space'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  '/api/v1/spaces/{spaceId}':
    get:
      tags:
        - Spaces
      x-swagger-router-controller: SpaceController
      description: Returns space by id
      operationId: getSpace
      parameters:
        - name: spaceId
          in: path
          description: Space's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    put:
      security:
        - cookieAuth: []
      tags:
        - Spaces
      x-swagger-router-controller: SpaceController
      description: Update space by id
      operationId: putSpace
      parameters:
        - name: spaceId
          in: path
          description: Space's id
          required: true
          schema:
            type: string
      requestBody:
        x-name: body
        description: Space object to be published
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/space'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    delete:
      security:
        - cookieAuth: []
      tags:
        - Spaces
      x-swagger-router-controller: SpaceController
      description: Delete space by id
      operationId: deleteSpace
      parameters:
        - name: spaceId
          in: path
          description: Space's id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Space deleted succesfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  '/api/v1/spaces/{spaceId}/rentals':
    get:
      tags:
        - Spaces
      x-swagger-router-controller: SpaceController
      description: Returns some space rentals
      operationId: getSpaceRentals
      parameters:
        - name: spaceId
          in: path
          description: Space's id
          required: true
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Offset for pagination'
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: 'Limit for pagination'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rental'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  '/api/v1/spaces/{spaceId}/images':
    get:
      tags:
        - Spaces
      x-swagger-router-controller: SpaceController
      description: Returns all the images of a space
      operationId: getSpaceImages
      parameters:
        - name: spaceId
          in: path
          description: Space's id
          required: true
          schema:
            type: integer
        - name: offset
          in: query
          description: 'Offset for pagination'
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: 'Limit for pagination'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/image'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/rentals:
    get:
      tags:
        - Rentals
      x-swagger-router-controller: RentalController
      description: Returns all rentals
      operationId: getRentals
      parameters:
        - name: offset
          in: query
          description: 'Offset for pagination'
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: 'Limit for pagination'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/rental'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/rentals/{rentalId}:
    get:
      tags:
        - Rentals
      x-swagger-router-controller: RentalController
      description: Returns rental by id
      operationId: getRental
      parameters:
        - name: rentalId
          in: path
          description: Rental's id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rental'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/tags:
    get:
      tags:
        - SpaceTags
      x-swagger-router-controller: TagController
      description: Returns all existing tags
      operationId: getTags
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/smartSearch/spaces:
    post:
      tags:
        - SmartSearch
      x-swagger-router-controller: SmartSearchController
      description: Search for spaces through an advanced algorithm
      operationId: getSpaces
      parameters: 
        - name: latitude
          in: query
          description: 'User latitude'
          required: false
          schema:
            type: number
            format: float
        
        - name: longitude
          in: query
          description: 'User longitude'
          required: false
          schema:
            type: number
            format: float

      requestBody:
        x-name: items
        description: Items to search for
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/item'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/smartSearchResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  /api/v1/smartSearch/spaces/train:
    post:
      tags:
        - SmartSearch
      x-swagger-router-controller: SmartSearchController
      description: Search for spaces through an advanced algorithm
      operationId: postTrainSpaces
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  
components:
  schemas:
    errorModel:
      type: string
    user:
      type: object
      required:
        - id
        - name
        - surname
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          format: date-time
        sex:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
        idcard:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        avatar:
          type: string
          format: binary
    item:
      type: object
      required:
        - type
        - dimensions
      properties:
        type:
          type: string
        dimensions:
          type: string
    rating:
      type: object
      required:
        - title
        - description
        - rating
        - reviewerId
        - receiverId
      properties:
        title:
          type: string
        description:
          type: string
        rating:
          type: integer
        reviewerId:
          type: integer
          format: int32
        receiverId:
          type: integer
          format: int32
    space:
      type: object
      required:
        - name
        - description
        - initialDate
        - location
        - dimensions
        - shared
        - ownerId
      properties:
        name:
          type: string
        description:
          type: string
        initialDate:
          type: string
          format: date-time
        finalDate:
          type: string
          format: date-time
        location:
          type: string
        dimensions:
          type: string
        priceHour:
          type: number
          format: double
        priceDay:
          type: number
          format: double
        priceMonth:
          type: number
          format: double
        shared:
          type: boolean
        ownerId:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        image:
          type: array
          items:
            type: string
            format: byte
    rental:
      type: object
      required:
        - initialDate
        - finalDate
        - cost
        - type
        - meters
        - spaceId
        - renterId
      properties:
        initialDate:
          type: string
          format: date-time
        finalDate:
          type: string
          format: date-time
        cost:
          type: integer
        type:
          type: string
          enum:
            - HOUR
            - DAY
            - MONTH
        meters:
          type: number
          format: double
        spaceId:
          type: integer
          format: int32
        renterId:
          type: integer
          format: int32
    image:
      type: string
      format: byte
    smartSearchResult:
      type: object
      required:
        - id
        - score
      properties:
        id:
          type: integer
          format: int32
        score:
          type: number
          format: double
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: authToken